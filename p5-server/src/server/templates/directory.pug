doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    link(rel='icon', href='/__p5_server_static/favicon.svg')
    link(rel='mask-icon', href='/__p5_server_static/favicon-mask.svg', color='#000000')
    title= title
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.6/dist/jquery.min.js' crossorigin='anonymous')
    script(src='https://cdn.jsdelivr.net/npm/semantic-ui@2.4/dist/semantic.min.js' crossorigin='anonymous' defer)
    link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/semantic-ui@2.4/dist/semantic.min.css')
    style.
      body {
        max-width: 800px;
        margin: auto;
        padding: 5px;
      }
      #readme-title {
        display: block;
        padding-bottom: 5px;
        border-bottom: 1px dotted #ccc;
      }
  body
    .ui.breadcrumb
      each component, i in pathComponents
        if i > 0
          .divider  /
        if i + 1 == pathComponents.length
          .section.active= component.name
        else
          a.section(href=component.path)= component.name

    if sketches.length
      .ui.segment
        h2.ui.header Sketches
        .ui.three.stackable.cards
          each sketch in sketches
            .ui.card
              .content
                .header
                  a(href=path_to(sketch.mainFile, sketch))
                    img.ui.mini.image(src='/__p5_server_static/assets/p5js-icon.png')
                    | &ensp;
                    = sketch.name
                .description
                  if sketch.description
                    div(data-tooltip="This description comes from the HTML or JavaScript file")= sketch.description
                  .ui.divider
                  div
                    span(data-tooltip="The root of the sketch. The HTML or JavaScript file that includes everything else")
                      i.small.info.circle.icon
                    | Main file
                    | :&ensp;
                    a(href=path_to_src_view(sketch.mainFile, sketch))
                      = path_to(sketch.mainFile, sketch)
                  if sketch.files.length > 1
                    div
                      | Other files:&ensp;
                      .ui.horizontal.list
                        each file in sketch.files
                          if file != sketch.mainFile
                            a.item(href=path_to_src_view(file, sketch))= file
                  if sketch.libraries.withImportPaths.length > 0
                    div
                      | Libraries:&ensp;
                      .ui.horizontal.list
                        each library in sketch.libraries.withImportPaths
                          a.item(href=library.homepage)= library.name
                  if sketch.libraries.withoutImportPaths.length > 0
                    div
                      | Library Candidates
                      div.
                        This sketches uses libraries that can't be automatically included,
                        because they haven't been published to npm.
                        Create an HTML file that imports the sketch file and these libraries.
                      .ui.horizontal.list
                        each library in sketch.libraries.withoutImportPaths
                          a.item(href=library.homepage)= library.name
              .extra.content
                a(href=path_to(sketch.mainFile, sketch))
                  i.play.icon
                  | Run

    if directories.length
      .ui.segment
        h2.ui.header Folders
        .ui.divided.list
          each dir in directories
            .item
              i.folder.outline.icon
              a.content(href=dir + '/')= dir

    if files.length
      .ui.segment
        h2.ui.header
          span(data-html="These files don't appear to be associated with any\nsketches in this directory. See the p5-server docs.")
            i.small.info.circle.icon
          | Loose Files
        div.
          Note that p5-server only recognizes literal strings, for example `loadImage("dog.png")`
          but not `name = "cat.png"; loadImage(name)`.
        .ui.divided.list
          each file in files
            .item
              i.file.outline.icon
              a.content(href=file)= file

    if readme
      #readme.ui.segment
        a#readme-title(href=readme.name)= readme.name
        != readme.html
